{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/md.abdulmuhaimen/Desktop/Projects/running/jj1078841-Insurances-Website-frontend/src/redux/features/auth/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AuthState, User } from '../../types/authInterface';\n\nconst initialState: AuthState = {\n  user: null,\n  token: null,\n  loading: false,\n  error: null,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setUser: (state, action: PayloadAction<User>) => {\n      state.user = action.payload;\n    },\n    setToken: (state, action: PayloadAction<string>) => {\n      state.token = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n      state.token = null;\n    },\n  },\n});\n\nexport const { setUser, setToken, logout } = authSlice.actions;\nexport default authSlice.reducer;\n"],"names":[],"mappings":";;;;;;AAAA;;AAGA,MAAM,eAA0B;IAC9B,MAAM;IACN,OAAO;IACP,SAAS;IACT,OAAO;AACT;AAEA,MAAM,YAAY,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,MAAM;IACN;IACA,UAAU;QACR,SAAS,CAAC,OAAO;YACf,MAAM,IAAI,GAAG,OAAO,OAAO;QAC7B;QACA,UAAU,CAAC,OAAO;YAChB,MAAM,KAAK,GAAG,OAAO,OAAO;QAC9B;QACA,QAAQ,CAAC;YACP,MAAM,IAAI,GAAG;YACb,MAAM,KAAK,GAAG;QAChB;IACF;AACF;AAEO,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,UAAU,OAAO;uCAC/C,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///Users/md.abdulmuhaimen/Desktop/Projects/running/jj1078841-Insurances-Website-frontend/src/redux/api/baseApi.ts"],"sourcesContent":[" \nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport type { RootState } from '../store';\n\nexport const baseApi = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({\n    baseUrl: process.env.NEXT_PUBLIC_API_URL,\n    prepareHeaders: (headers, { getState }) => {\n      const token = (getState() as RootState).auth.token;\n      if (token) {\n        headers.set('Authorization', `Bearer ${token}`);\n      }\n      return headers;\n    },\n  }),\n  endpoints: () => ({}),\n  tagTypes: ['User'],\n});\n\n\n\n// import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n// import type { RootState } from '../store'; // Adjust path as needed\n\n// const token=localStorage.getItem(\"accessToken\")\n\n// export const baseApi = createApi({\n//   reducerPath: 'api',\n//   baseQuery: fetchBaseQuery({\n//     baseUrl: process.env.NEXT_PUBLIC_API_URL,\n//     prepareHeaders: (headers, { getState }) => {\n//       // const token = (getState() as RootState).auth.token;\n//       if (token) {\n//         headers.set('Authorization', `Bearer ${token}`);\n//       }\n//       return headers;\n//     },\n//   }),\n//   endpoints: () => ({}),\n//   tagTypes: ['User'],\n// });\n"],"names":[],"mappings":";;;AACA;AAAA;;AAGO,MAAM,UAAU,CAAA,GAAA,kNAAA,CAAA,YAAS,AAAD,EAAE;IAC/B,aAAa;IACb,WAAW,CAAA,GAAA,gLAAA,CAAA,iBAAc,AAAD,EAAE;QACxB,SAAS,QAAQ,GAAG,CAAC,mBAAmB;QACxC,gBAAgB,CAAC,SAAS,EAAE,QAAQ,EAAE;YACpC,MAAM,QAAQ,AAAC,WAAyB,IAAI,CAAC,KAAK;YAClD,IAAI,OAAO;gBACT,QAAQ,GAAG,CAAC,iBAAiB,CAAC,OAAO,EAAE,OAAO;YAChD;YACA,OAAO;QACT;IACF;IACA,WAAW,IAAM,CAAC,CAAC,CAAC;IACpB,UAAU;QAAC;KAAO;AACpB,IAIA,4EAA4E;CAC5E,sEAAsE;CAEtE,kDAAkD;CAElD,qCAAqC;CACrC,wBAAwB;CACxB,gCAAgC;CAChC,gDAAgD;CAChD,mDAAmD;CACnD,+DAA+D;CAC/D,qBAAqB;CACrB,2DAA2D;CAC3D,UAAU;CACV,wBAAwB;CACxB,SAAS;CACT,QAAQ;CACR,2BAA2B;CAC3B,wBAAwB;CACxB,MAAM","debugId":null}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["file:///Users/md.abdulmuhaimen/Desktop/Projects/running/jj1078841-Insurances-Website-frontend/src/redux/store.ts"],"sourcesContent":["// import { configureStore } from '@reduxjs/toolkit'; \n// import { baseApi } from './api/baseApi';\n// import authReducer from './features/auth/authSlice';\n\n// export const store = configureStore({\n//   reducer: {\n//     [baseApi.reducerPath]: baseApi.reducer,\n//     auth: authReducer,\n//   },\n//   middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware().concat(baseApi.middleware),\n// });\n\n// export type RootState = ReturnType<typeof store.getState>;\n// export type AppDispatch = typeof store.dispatch;\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './features/auth/authSlice';\nimport { baseApi } from './api/baseApi';\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    [baseApi.reducerPath]: baseApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(baseApi.middleware),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n"],"names":[],"mappings":"AAAA,sDAAsD;AACtD,2CAA2C;AAC3C,uDAAuD;AAEvD,wCAAwC;AACxC,eAAe;AACf,8CAA8C;AAC9C,yBAAyB;AACzB,OAAO;AACP,0CAA0C;AAC1C,yDAAyD;AACzD,MAAM;AAEN,6DAA6D;AAC7D,mDAAmD;;;;AAEnD;AACA;AACA;;;;AAEO,MAAM,QAAQ,CAAA,GAAA,2LAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS;QACP,MAAM,6IAAA,CAAA,UAAW;QACjB,CAAC,8HAAA,CAAA,UAAO,CAAC,WAAW,CAAC,EAAE,8HAAA,CAAA,UAAO,CAAC,OAAO;IACxC;IACA,YAAY,CAAC,uBACX,uBAAuB,MAAM,CAAC,8HAAA,CAAA,UAAO,CAAC,UAAU;AACpD","debugId":null}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file:///Users/md.abdulmuhaimen/Desktop/Projects/running/jj1078841-Insurances-Website-frontend/src/redux/provider.tsx"],"sourcesContent":["'use client';\n\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nexport function ReduxProvider({ children }: { children: React.ReactNode }) {\n  return <Provider store={store}>{children}</Provider>;\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKO,SAAS,cAAc,EAAE,QAAQ,EAAiC;IACvE,qBAAO,8OAAC,yJAAA,CAAA,WAAQ;QAAC,OAAO,qHAAA,CAAA,QAAK;kBAAG;;;;;;AAClC","debugId":null}}]
}